/// <reference types="react" />
import type { ScatterChartProps } from './ScatterChart';
/**
 * A helper function that extracts ScatterChartProps from the input props
 * and returns an object with props for the children components of ScatterChart.
 *
 * @param props The input props for ScatterChart
 * @returns An object with props for the children components of ScatterChart
 */
export declare const useScatterChartProps: (props: ScatterChartProps) => {
    chartContainerProps: {
        series: {
            color?: string | undefined;
            data: import("..").ScatterValueType[];
            label?: string | ((location: "tooltip" | "legend") => string) | undefined;
            id?: import("../internals").SeriesId | undefined;
            valueFormatter?: import("../internals").SeriesValueFormatter<import("..").ScatterValueType> | undefined;
            highlightScope?: Partial<import("..").HighlightScope> | undefined;
            xAxisKey?: string | undefined;
            yAxisKey?: string | undefined;
            markerSize?: number | undefined;
            disableHover?: boolean | undefined;
            zAxisKey?: string | undefined;
            type: "scatter";
        }[];
        width: number | undefined;
        height: number | undefined;
        margin: Partial<import("..").CardinalDirections<number>> | undefined;
        colors: import("..").ChartsColorPalette | undefined;
        xAxis: import("../internals").MakeOptional<import("..").AxisConfig<import("..").ScaleName, any, import("..").ChartsXAxisProps>, "id">[] | undefined;
        yAxis: import("../internals").MakeOptional<import("..").AxisConfig<import("..").ScaleName, any, import("..").ChartsYAxisProps>, "id">[] | undefined;
        sx: import("@mui/system").SxProps<import("@mui/material").Theme> | undefined;
        highlightedItem: import("..").HighlightItemData | null | undefined;
        onHighlightChange: ((highlightedItem: import("..").HighlightItemData | null) => void) | undefined;
    };
    zAxisProps: {
        zAxis: import("../internals").MakeOptional<import("../internals").ZAxisConfig<any>, "id">[] | undefined;
    };
    voronoiHandlerProps: {
        voronoiMaxRadius: number | undefined;
        onItemClick: ((event: MouseEvent, scatterItemIdentifier: import("..").ScatterItemIdentifier) => void) | undefined;
    };
    chartsAxisProps: {
        topAxis: string | import("..").ChartsXAxisProps | null | undefined;
        leftAxis: string | import("..").ChartsYAxisProps | null | undefined;
        rightAxis: string | import("..").ChartsYAxisProps | null | undefined;
        bottomAxis: string | import("..").ChartsXAxisProps | null | undefined;
        slots: import("./ScatterChart").ScatterChartSlots | undefined;
        slotProps: import("./ScatterChart").ScatterChartSlotProps | undefined;
    };
    gridProps: {
        vertical: boolean | undefined;
        horizontal: boolean | undefined;
    };
    scatterPlotProps: {
        onItemClick: ((event: import("react").MouseEvent<SVGElement, MouseEvent>, scatterItemIdentifier: import("..").ScatterItemIdentifier) => void) | undefined;
        slots: import("./ScatterChart").ScatterChartSlots | undefined;
        slotProps: import("./ScatterChart").ScatterChartSlotProps | undefined;
    };
    overlayProps: {
        loading: boolean | undefined;
        slots: import("./ScatterChart").ScatterChartSlots | undefined;
        slotProps: import("./ScatterChart").ScatterChartSlotProps | undefined;
    };
    legendProps: {
        slots: import("./ScatterChart").ScatterChartSlots | undefined;
        slotProps: import("./ScatterChart").ScatterChartSlotProps | undefined;
        position?: import("..").AnchorPosition | undefined;
        classes?: Partial<import("..").ChartsLegendClasses> | undefined;
        hidden?: boolean | undefined;
        direction?: import("..").Direction | undefined;
    };
    axisHighlightProps: {
        x: "none" | "line" | "band";
        y: "none" | "line" | "band";
    };
    tooltipProps: {
        slots: import("./ScatterChart").ScatterChartSlots | undefined;
        slotProps: import("./ScatterChart").ScatterChartSlotProps | undefined;
        trigger: import("../ChartsTooltip/utils").TriggerOptions;
        itemContent?: import("react").ElementType<import("..").ChartsItemContentProps<any>, keyof import("react").JSX.IntrinsicElements> | undefined;
        axisContent?: import("react").ElementType<import("..").ChartsAxisContentProps, keyof import("react").JSX.IntrinsicElements> | undefined;
        classes?: Partial<import("..").ChartsTooltipClasses> | undefined;
    };
    children: import("react").ReactNode;
};
